name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [ push ]
jobs:
#  Explore-GitHub-Actions:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
  #      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #      - name: Check out repository code
  #        uses: actions/checkout@v3
  #      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
  #      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
  #      - name: List files in the repository
  #        run: |
  #          ls ${{ github.workspace }}
  #      - run: rm -rf ./gradlew
  #      - run: rm -rf ./gradle
  #      - run: rm -rf ./gradle.bat
  #      - name: List files in the repository
  #        run: |
  #          ls ${{ github.workspace }}
  #      - name: Setup Gradle
  #        uses: gradle/gradle-build-action@v2
  #      - name: Run build with Gradle Wrapper
  #        run: ./gradlew test
  #      - run: echo "🍏 This job's status is ${{ job.status }}."
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v2
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Run build with Gradle Wrapper
        run: ./gradlew build --x test
      - run: echo "🍏 This job's status is ${{ job.status }}."